@page "{id}"
@model api.Pages.Admin.Orders.UpdateModel
@{
    ViewData["Title"] = "Cập nhật trạng thái đơn hàng";
}

<h2 class="text-xl font-semibold mb-4 text-white">Cập nhật trạng thái đơn hàng</h2>

@if (!string.IsNullOrEmpty(Model.OrderId))
{
    <div class="bg-gray-800 p-4 rounded-md mb-4">
        <h3 class="text-lg font-medium text-white mb-2">Thông tin đơn hàng</h3>
        <p class="text-gray-300">ID: <span class="font-semibold text-yellow-400">@Model.OrderId</span></p>
        <p class="text-gray-300">Trạng thái hiện tại: <span class="font-semibold text-blue-400">@Model.Status</span></p>
    </div>
}

<form method="post" class="space-y-4 bg-[#1E293B] p-6 rounded-xl max-w-md">
    @Html.AntiForgeryToken()
    
    <!-- Hidden field để đảm bảo OrderId được truyền -->
    <input type="hidden" name="OrderId" value="@Model.OrderId" />

    <div class="space-y-1">
        <label class="block text-gray-300">Cập nhật trạng thái:</label>
        <select name="Status" class="w-full rounded-md p-2 bg-gray-800 text-white border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option value="">-- Chọn trạng thái --</option>
            <option value="pending" @(Model.Status == "pending" ? "selected" : "")>Pending</option>
            <option value="processing" @(Model.Status == "processing" ? "selected" : "")>Processing</option>
            <option value="shipped" @(Model.Status == "shipped" ? "selected" : "")>Shipped</option>
            <option value="delivered" @(Model.Status == "delivered" ? "selected" : "")>Delivered</option>
            <option value="cancelled" @(Model.Status == "cancelled" ? "selected" : "")>Cancelled</option>
        </select>
        @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ContainsKey("Status"))
        {
            <span class="text-red-500 text-sm">@ViewData.ModelState["Status"].Errors.FirstOrDefault()?.ErrorMessage</span>
        }
    </div>

    <div class="flex gap-4">
        <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
            Cập nhật
        </button>
        <a href="./Index" class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500">
            Quay lại
        </a>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
            <ul class="list-disc list-inside">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
            @TempData["Success"]
        </div>
    }
</form>