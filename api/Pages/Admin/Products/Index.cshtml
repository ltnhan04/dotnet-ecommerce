@page
@model api.Pages.Admin.Products.IndexModel
@{
    ViewData["Title"] = "Products Management";
    ViewData["PageTitle"] = "Products";
    Layout = "_Layout";
}

<div class="space-y-6">
    <div class="bg-[#1E293B] rounded-xl shadow-md p-6">
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
            <form method="get" class="flex flex-wrap gap-2 w-full items-end">
                <div class="relative">
                    <input type="text" name="search" value="@Model.Search" placeholder="Search products..." 
                           class="bg-gray-800 text-white px-4 py-2 rounded-lg pl-10 w-full sm:w-64 focus:outline-none focus:ring-2 focus:ring-[#2196F3]">
                    <i data-lucide="search" class="w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                </div>
                <select name="categoryId" class="bg-gray-800 text-white px-4 py-2 rounded-lg">
                    <option value="">Categories</option>
                    @foreach (var cat in Model.Categories)
                    {
                        <option value="@cat._id" @(Model.CategoryId==cat._id?"selected":null)>@cat.name</option>
                    }
                </select>
                <input  name="minPrice" value="@Request.Query["minPrice"]" placeholder="Min Price" class="bg-gray-800 text-white px-2 py-2 rounded-lg w-24" />
                <input name="maxPrice" value="@Request.Query["maxPrice"]" placeholder="Max Price" class="bg-gray-800 text-white px-2 py-2 rounded-lg w-24" />
                <select name="color" class="bg-gray-800 text-white px-2 py-2 rounded-lg">
                    <option value="">Colors</option>
                    <option value="Red" @(Request.Query["color"]=="Red"?"selected":null)>Red</option>
                    <option value="Blue" @(Request.Query["color"]=="Blue"?"selected":null)>Blue</option>
                    <option value="Black" @(Request.Query["color"]=="Black"?"selected":null)>Black</option>
                    <option value="White" @(Request.Query["color"]=="White"?"selected":null)>White</option>
                </select>
                <select name="storage" class="bg-gray-800 text-white px-2 py-2 rounded-lg">
                    <option value="">Storage</option>
                    <option value="64GB" @(Request.Query["storage"]=="64GB"?"selected":null)>64GB</option>
                    <option value="128GB" @(Request.Query["storage"]=="128GB"?"selected":null)>128GB</option>
                    <option value="256GB" @(Request.Query["storage"]=="256GB"?"selected":null)>256GB</option>
                    <option value="512GB" @(Request.Query["storage"]=="512GB"?"selected":null)>512GB</option>
                </select>
                <button type="submit" class="bg-[#2196F3] hover:bg-[#1E88E5] text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors">
                    <i data-lucide="search" class="w-4 h-4"></i>
                </button>
            </form>
            
            <div class="flex space-x-3">
                <a href="/Admin/Products/Create" 
                   class="bg-[#2196F3] hover:bg-[#1E88E5] text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors">
                    <i data-lucide="plus" class="w-4 h-4"></i>
                </a>
                
            </div>
        </div>
    </div>

    <!-- Products Table -->
    <div class="bg-[#1E293B] rounded-xl shadow-md overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-700">
            <h3 class="text-lg font-semibold text-white">Products List</h3>
        </div>
        
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead class="bg-gray-800">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Product</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Category</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Brand</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Price</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Stock</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-700">
                    @for (int i = 0; i < Model.Products.Count; i++)
                    {
                        var product = Model.Products[i];
                        <tr class="hover:bg-gray-800 transition-colors">
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">@((Model.CurrentPage - 1) * Model.PageSize + i + 1)</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div>
                                    <div class="text-sm font-medium text-white">@product.name</div>
                                    <div class="text-sm text-gray-400">
                                        @{
                                            var plainDesc = System.Text.RegularExpressions.Regex.Replace(product.description ?? "", "<.*?>", "");
                                            var shortDesc = plainDesc.Length > 50 ? plainDesc.Substring(0, 50) + "..." : plainDesc;
                                        }
                                        @Html.Raw(shortDesc)
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                                @product.category.name
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                                @(product.variants.FirstOrDefault()?.color.colorName ?? "N/A")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                                @((product.variants.FirstOrDefault()?.price ?? 0).ToString("N0"))â‚«
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                                @(product.variants.FirstOrDefault()?.stock_quantity ?? 0)
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var status = product.variants.FirstOrDefault()?.status ?? "in_stock";
                                    var statusClass = status == "in_stock" ? "bg-[#4CAF50] text-white" : "bg-[#F44336] text-white";
                                    var statusText = status == "in_stock" ? "Active" : "Inactive";
                                }
                                <span class="px-2 py-1 text-xs font-medium rounded-full @statusClass">
                                    @statusText
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <div class="flex space-x-2">
                                    <a href="/Admin/Products/Details/@product._id" class="text-[#2196F3] hover:text-[#1E88E5]">
                                        <i data-lucide="eye" class="w-4 h-4"></i>
                                    </a>
                                    <a href="/Admin/Products/Edit/@product._id" class="text-[#4CAF50] hover:text-[#45A049]">
                                        <i data-lucide="edit" class="w-4 h-4"></i>
                                    </a>
                                    <a href="/Admin/Products/Delete/@product._id" class="text-[#F44336] hover:text-[#D32F2F]">
                                        <i data-lucide="trash-2" class="w-4 h-4"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="flex justify-center mt-6">
            <nav class="inline-flex rounded-md shadow-sm" aria-label="Pagination">
                <a class="px-3 py-2 border border-gray-700 bg-gray-800 text-gray-300 rounded-l-md @(Model.CurrentPage == 1 ? "opacity-50 pointer-events-none" : "hover:bg-gray-700")"
                   href="?search=@Model.Search&categoryId=@Model.CategoryId&page=@(Model.CurrentPage-1)&size=@Model.PageSize">Previous</a>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a class="px-3 py-2 border-t border-b border-gray-700 bg-gray-800 text-gray-300 @(Model.CurrentPage == i ? "bg-[#2196F3] text-white" : "hover:bg-gray-700")"
                       href="?search=@Model.Search&categoryId=@Model.CategoryId&page=@i&size=@Model.PageSize">@i</a>
                }
                <a class="px-3 py-2 border border-gray-700 bg-gray-800 text-gray-300 rounded-r-md @(Model.CurrentPage == Model.TotalPages ? "opacity-50 pointer-events-none" : "hover:bg-gray-700")"
                   href="?search=@Model.Search&categoryId=@Model.CategoryId&page=@(Model.CurrentPage+1)&size=@Model.PageSize">Next</a>
            </nav>
        </div>
    }
</div>
