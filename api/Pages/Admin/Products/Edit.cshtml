@page "{id}"
@model api.Pages.Admin.Products.EditModel
@{
    ViewData["Title"] = "Edit Product";
    ViewData["PageTitle"] = "Edit Product";
}

<div class="max-w-4xl mx-auto">
    <div class="bg-[#1E293B] rounded-xl shadow-md p-6">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-white">Edit Product</h2>
            <a href="/admin/products" class="text-gray-400 hover:text-white flex items-center space-x-2">
                <i data-lucide="arrow-left" class="w-4 h-4"></i>
                <span>Back to Products</span>
            </a>
        </div>

        <form method="post" class="space-y-6">
        @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Product._id" />
            
            <!-- Basic Information -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-300 mb-2">
                        Product Name *
                    </label>
                    <input type="text" id="name" name="UpdateProduct.name" required value="@Model.UpdateProduct.name"
                           class="w-full bg-gray-800 text-white px-4 py-3 rounded-lg border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3] focus:border-transparent"
                           placeholder="Enter product name">
                </div>

                <div>
                    <label for="category" class="block text-sm font-medium text-gray-300 mb-2">
                        Category *
                    </label>
                    <select id="category" name="UpdateProduct.category" required
                            class="w-full bg-gray-800 text-white px-4 py-3 rounded-lg border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3] focus:border-transparent">
                        <option value="">Select a category</option>
                        @foreach (var cat in Model.Categories)
                        {
                            <option value="@cat._id" @(Model.UpdateProduct.category == cat._id ? "selected" : "")>@cat.name</option>
                        }
                    </select>
                </div>
            </div>

            <div>
                <label for="description" class="block text-sm font-medium text-gray-300 mb-2">
                    Description *
                </label>
                <textarea id="description" name="UpdateProduct.description" rows="4" required
                          class="w-full bg-gray-800 text-white px-4 py-3 rounded-lg border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3] focus:border-transparent"
                          placeholder="Enter product description">@Model.UpdateProduct.description</textarea>
            </div>

            <!-- Product Variants -->
            <div class="border-t border-gray-700 pt-6">
                <h3 class="text-lg font-medium text-white mb-4">Product Variants</h3>
                
                <div id="variants-container" class="space-y-4">
                    @for (int i = 0; i < Model.Product.variants.Count; i++)
                    {
                        var variant = Model.Product.variants[i];
                        <div class="variant-item bg-gray-800 rounded-lg p-4 border border-gray-700">
                            <div class="flex justify-between items-center mb-4">
                                <h4 class="text-sm font-medium text-gray-300">Variant @(i + 1)</h4>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Color</label>
                                    <input type="text" value="@variant.color.colorName" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Color Code</label>
                                    <input type="color" value="@variant.color.colorCode" readonly
                                           class="w-full h-10 bg-gray-700 rounded border border-gray-600">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Storage/Size</label>
                                    <input type="text" value="@variant.storage" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Price ($)</label>
                                    <input type="number" value="@variant.price" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Stock Quantity</label>
                                    <input type="number" value="@variant.stock_quantity" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Status</label>
                                    <input type="text" value="@variant.status" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Slug</label>
                                    <input type="text" value="@variant.slug" readonly
                                           class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600">
                                </div>
                            </div>
                            
                            <div class="mt-4">
                                <label class="block text-sm font-medium text-gray-300 mb-2">Images</label>
                                @if (variant.images != null && variant.images.Count > 0)
                                {
                                    <div class="flex space-x-2">
                                        @foreach (var img in variant.images.Take(3))
                                        {
                                            <img src="@img" class="w-16 h-16 object-cover rounded" />
                                        }
                                        @if (variant.images.Count > 3)
                                        {
                                            <div class="w-16 h-16 bg-gray-700 rounded-lg flex items-center justify-center">
                                                <span class="text-xs text-gray-400">+@(variant.images.Count - 3)</span>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-gray-500 text-sm">No images available</p>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-end space-x-4 pt-6 border-t border-gray-700">
                <a href="/admin/products" 
                   class="bg-gray-700 hover:bg-gray-600 text-white px-6 py-3 rounded-lg transition-colors">
                    Cancel
                </a>
                <button type="submit" 
                        class="bg-[#4CAF50] hover:bg-[#45A049] text-white px-6 py-3 rounded-lg flex items-center space-x-2 transition-colors">
                    <i data-lucide="save" class="w-4 h-4"></i>
                    <span>Update Product</span>
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    let variantIndex = @Model.Product.variants.Count;
    
    document.getElementById('add-variant').addEventListener('click', function() {
        const container = document.getElementById('variants-container');
        const template = `
            <div class="variant-item bg-gray-800 rounded-lg p-4 border border-gray-700">
                <div class="flex justify-between items-center mb-4">
                    <h4 class="text-sm font-medium text-gray-300">Variant ${variantIndex + 1}</h4>
                    <button type="button" class="remove-variant text-[#F44336] hover:text-[#D32F2F]">
                        <i data-lucide="trash-2" class="w-4 h-4"></i>
                    </button>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Color</label>
                        <input type="text" name="variants[${variantIndex}].colorName" 
                               class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               placeholder="e.g., Black">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Color Code</label>
                        <input type="color" name="variants[${variantIndex}].colorCode" 
                               class="w-full h-10 bg-gray-700 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               value="#000000">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Storage/Size</label>
                        <input type="text" name="variants[${variantIndex}].storage" 
                               class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               placeholder="e.g., 256GB, L, US 10">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Price ($)</label>
                        <input type="number" name="variants[${variantIndex}].price" min="0" step="0.01" required
                               class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               placeholder="0.00">
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Stock Quantity</label>
                        <input type="number" name="variants[${variantIndex}].stockQuantity" min="0" required
                               class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               placeholder="0">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Status</label>
                        <select name="variants[${variantIndex}].status" 
                                class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]">
                            <option value="in_stock">In Stock</option>
                            <option value="out_of_stock">Out of Stock</option>
                            <option value="discontinued">Discontinued</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Slug</label>
                        <input type="text" name="variants[${variantIndex}].slug" required
                               class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                               placeholder="product-variant-slug">
                    </div>
                </div>
                
                <div class="mt-4">
                    <label class="block text-sm font-medium text-gray-300 mb-2">Images (URLs)</label>
                    <textarea name="variants[${variantIndex}].images" rows="2"
                              class="w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#2196F3]"
                              placeholder="Enter image URLs separated by commas"></textarea>
                </div>
            </div>
        `;
        
        container.insertAdjacentHTML('beforeend', template);
        variantIndex++;
        
        // Reinitialize Lucide icons
        lucide.createIcons();
        
        // Add remove functionality
        const removeButtons = document.querySelectorAll('.remove-variant');
        removeButtons.forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.variant-item').remove();
            });
        });
    });
    
    // Add remove functionality for existing variants
    document.addEventListener('DOMContentLoaded', function() {
        const removeButtons = document.querySelectorAll('.remove-variant');
        removeButtons.forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.variant-item').remove();
            });
        });
    });
</script>